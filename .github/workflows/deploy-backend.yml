name: Deploy Backend Lambdas

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment stage'
        required: true
        default: 'dev'
        type: choice
        options: [dev, prod]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Credentials

    # Make secrets available to ALL steps
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_DEPLOY_KEY }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      LINKEDIN_CLIENT_ID: ${{ vars.LINKEDIN_CLIENT_ID }}
      LINKEDIN_CLIENT_SECRET: ${{ secrets.LINKEDIN_CLIENT_SECRET }}
      LINKEDIN_REDIRECT_URI: ${{ vars.LINKEDIN_REDIRECT_URI }}
      FRONTEND_REDIRECT_URI: ${{vars.FRONTEND_REDIRECT_URI}}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Determine deployment stage
        id: stage
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "stage=${{ github.event.inputs.stage }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "stage=prod" >> $GITHUB_OUTPUT
          else
            echo "stage=dev" >> $GITHUB_OUTPUT
          fi

      - name: Install Serverless Framework
        run: npm install -g serverless@latest

      - name: Authenticate to Serverless (non-interactive)
        run: npx serverless login --token "$SERVERLESS_ACCESS_KEY"

      # Quick sanity check so we fail early if axios isn't installed
      - name: Verify backend deps (axios present)
        working-directory: backend
        run: |
          npm ls axios || (echo "axios NOT installed under backend/; check package.json & npm ci" && exit 1)
          test -d node_modules/axios || (echo "node_modules/axios missing in backend/" && exit 1)

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy with Serverless
        working-directory: backend
        run: npx serverless deploy --stage ${{ steps.stage.outputs.stage }}
